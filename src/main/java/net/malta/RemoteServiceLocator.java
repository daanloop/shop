// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringClientServiceLocator.vsl in andromda-spring-cartridge.
//
package net.malta;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 * Locates and provides all available application services.
 */
public class RemoteServiceLocator
{
    /**
     * The default application context location.
     */
    private final String DEFAULT_CONTEXT_LOCATION = "applicationContext-import-remoteServices.xml";

    /**
     * The spring application context shared instance.
     */
    private ClassPathXmlApplicationContext context = null;

    /**
     * The application context location.
     */
    private String contextLocation;

    private RemoteServiceLocator()
    {
        // shouldn't be instantiated
    }

    /**
     * The shared instance of this RemoteServiceLocator.
     */
    private final static RemoteServiceLocator instance = new RemoteServiceLocator();

    /**
     * Gets the shared instance of this Class
     *
     * @return the shared service locator instance.
     */
    public static RemoteServiceLocator instance()
    {
        return instance;
    }

    /**
     * Initializes the Spring application context from
     * the given <code>applicationContextLocation</code>.  If <code>null</code>
     * is specified for the <code>applicationContextLocation</code>
     * then the default application context will be used.
     *
     * @param applicationContextLocation the location of the context
     */
    public synchronized void init(String applicationContextLocation)
    {
        contextLocation = applicationContextLocation;
        context = null;
    }

    /**
     * Gets the Spring ApplicationContext.
     */
    protected synchronized ApplicationContext getContext()
    {
        if (context == null)
        {
            if (contextLocation == null)
            {
                contextLocation = DEFAULT_CONTEXT_LOCATION;
            }
                context = new ClassPathXmlApplicationContext(contextLocation);
        }
        return context;
    }

    /**
     * Gets an instance of the given service.
     */
    public final Object getService(String serviceName)
    {
        return getContext().getBean(serviceName);
    }
	
}
