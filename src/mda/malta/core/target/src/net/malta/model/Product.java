// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package net.malta.model;

/**
 * 
 */
public abstract class Product
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -7961490641571513298L;

    private java.lang.Integer id;

    /**
     * 
     */
    public java.lang.Integer getId()
    {
        return this.id;
    }

    public void setId(java.lang.Integer id)
    {
        this.id = id;
    }

    private java.lang.String no;

    /**
     * 
     */
    public java.lang.String getNo()
    {
        return this.no;
    }

    public void setNo(java.lang.String no)
    {
        this.no = no;
    }

    private java.lang.String name;

    /**
     * 
     */
    public java.lang.String getName()
    {
        return this.name;
    }

    public void setName(java.lang.String name)
    {
        this.name = name;
    }

    private java.util.Date date;

    /**
     * 
     */
    public java.util.Date getDate()
    {
        return this.date;
    }

    public void setDate(java.util.Date date)
    {
        this.date = date;
    }

    private boolean pub;

    /**
     * 
     */
    public boolean isPub()
    {
        return this.pub;
    }

    public void setPub(boolean pub)
    {
        this.pub = pub;
    }

    private int pricewithtax;

    /**
     * 
     */
    public int getPricewithtax()
    {
        return this.pricewithtax;
    }

    public void setPricewithtax(int pricewithtax)
    {
        this.pricewithtax = pricewithtax;
    }

    private java.lang.String size;

    /**
     * 
     */
    public java.lang.String getSize()
    {
        return this.size;
    }

    public void setSize(java.lang.String size)
    {
        this.size = size;
    }

    private java.lang.String material;

    /**
     * 
     */
    public java.lang.String getMaterial()
    {
        return this.material;
    }

    public void setMaterial(java.lang.String material)
    {
        this.material = material;
    }

    private java.lang.String catchcopy;

    /**
     * 
     */
    public java.lang.String getCatchcopy()
    {
        return this.catchcopy;
    }

    public void setCatchcopy(java.lang.String catchcopy)
    {
        this.catchcopy = catchcopy;
    }

    private java.lang.String description;

    /**
     * 
     */
    public java.lang.String getDescription()
    {
        return this.description;
    }

    public void setDescription(java.lang.String description)
    {
        this.description = description;
    }

    private java.lang.String note;

    /**
     * 
     */
    public java.lang.String getNote()
    {
        return this.note;
    }

    public void setNote(java.lang.String note)
    {
        this.note = note;
    }

    private int stocknum;

    /**
     * 
     */
    public int getStocknum()
    {
        return this.stocknum;
    }

    public void setStocknum(int stocknum)
    {
        this.stocknum = stocknum;
    }

    private boolean removed;

    /**
     * 
     */
    public boolean isRemoved()
    {
        return this.removed;
    }

    public void setRemoved(boolean removed)
    {
        this.removed = removed;
    }

    private java.lang.String mainitemname;

    /**
     * 
     */
    public java.lang.String getMainitemname()
    {
        return this.mainitemname;
    }

    public void setMainitemname(java.lang.String mainitemname)
    {
        this.mainitemname = mainitemname;
    }

    private java.lang.String english;

    /**
     * 
     */
    public java.lang.String getEnglish()
    {
        return this.english;
    }

    public void setEnglish(java.lang.String english)
    {
        this.english = english;
    }

    private java.util.Collection items = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getItems()
    {
        return this.items;
    }

    public void setItems(java.util.Collection items)
    {
        this.items = items;
    }

    private net.malta.model.Category category;

    /**
     * 
     */
    public net.malta.model.Category getCategory()
    {
        return this.category;
    }

    public void setCategory(net.malta.model.Category category)
    {
        this.category = category;
    }

    private net.malta.model.Attachment thumnail;

    /**
     * 
     */
    public net.malta.model.Attachment getThumnail()
    {
        return this.thumnail;
    }

    public void setThumnail(net.malta.model.Attachment thumnail)
    {
        this.thumnail = thumnail;
    }

    private net.malta.model.Attachment slideshow;

    /**
     * 
     */
    public net.malta.model.Attachment getSlideshow()
    {
        return this.slideshow;
    }

    public void setSlideshow(net.malta.model.Attachment slideshow)
    {
        this.slideshow = slideshow;
    }

    /**
     * Returns <code>true</code> if the argument is an Product instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Product))
        {
            return false;
        }
        final Product that = (Product)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link net.malta.model.Product}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link net.malta.model.Product}.
         */
        public static net.malta.model.Product newInstance()
        {
            return new net.malta.model.ProductImpl();
        }

        /**
         * Constructs a new instance of {@link net.malta.model.Product}, taking all required and/or
         * read-only properties as arguments.
         */
        public static net.malta.model.Product newInstance(java.lang.String no, java.lang.String name, java.util.Date date, boolean pub, int pricewithtax, java.lang.String size, java.lang.String material, java.lang.String catchcopy, java.lang.String description, java.lang.String note, int stocknum, boolean removed, java.lang.String mainitemname, java.lang.String english)
        {
            final net.malta.model.Product entity = new net.malta.model.ProductImpl();
            entity.setNo(no);
            entity.setName(name);
            entity.setDate(date);
            entity.setPub(pub);
            entity.setPricewithtax(pricewithtax);
            entity.setSize(size);
            entity.setMaterial(material);
            entity.setCatchcopy(catchcopy);
            entity.setDescription(description);
            entity.setNote(note);
            entity.setStocknum(stocknum);
            entity.setRemoved(removed);
            entity.setMainitemname(mainitemname);
            entity.setEnglish(english);
            return entity;
        }

        /**
         * Constructs a new instance of {@link net.malta.model.Product}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static net.malta.model.Product newInstance(java.lang.String no, java.lang.String name, java.util.Date date, boolean pub, int pricewithtax, java.lang.String size, java.lang.String material, java.lang.String catchcopy, java.lang.String description, java.lang.String note, int stocknum, boolean removed, java.lang.String mainitemname, java.lang.String english, java.util.Collection items, net.malta.model.Category category, net.malta.model.Attachment thumnail, net.malta.model.Attachment slideshow)
        {
            final net.malta.model.Product entity = new net.malta.model.ProductImpl();
            entity.setNo(no);
            entity.setName(name);
            entity.setDate(date);
            entity.setPub(pub);
            entity.setPricewithtax(pricewithtax);
            entity.setSize(size);
            entity.setMaterial(material);
            entity.setCatchcopy(catchcopy);
            entity.setDescription(description);
            entity.setNote(note);
            entity.setStocknum(stocknum);
            entity.setRemoved(removed);
            entity.setMainitemname(mainitemname);
            entity.setEnglish(english);
            entity.setItems(items);
            entity.setCategory(category);
            entity.setThumnail(thumnail);
            entity.setSlideshow(slideshow);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}