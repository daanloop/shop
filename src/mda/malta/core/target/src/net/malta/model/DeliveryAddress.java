// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package net.malta.model;

/**
 * 
 */
public abstract class DeliveryAddress
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 7192773678198672507L;

    private java.lang.Integer id;

    /**
     * 
     */
    public java.lang.Integer getId()
    {
        return this.id;
    }

    public void setId(java.lang.Integer id)
    {
        this.id = id;
    }

    private java.lang.String name;

    /**
     * 
     */
    public java.lang.String getName()
    {
        return this.name;
    }

    public void setName(java.lang.String name)
    {
        this.name = name;
    }

    private java.lang.String kana;

    /**
     * 
     */
    public java.lang.String getKana()
    {
        return this.kana;
    }

    public void setKana(java.lang.String kana)
    {
        this.kana = kana;
    }

    private int zipthree;

    /**
     * 
     */
    public int getZipthree()
    {
        return this.zipthree;
    }

    public void setZipthree(int zipthree)
    {
        this.zipthree = zipthree;
    }

    private int zipfour;

    /**
     * 
     */
    public int getZipfour()
    {
        return this.zipfour;
    }

    public void setZipfour(int zipfour)
    {
        this.zipfour = zipfour;
    }

    private java.lang.String phone;

    /**
     * 
     */
    public java.lang.String getPhone()
    {
        return this.phone;
    }

    public void setPhone(java.lang.String phone)
    {
        this.phone = phone;
    }

    private java.lang.String address;

    /**
     * 
     */
    public java.lang.String getAddress()
    {
        return this.address;
    }

    public void setAddress(java.lang.String address)
    {
        this.address = address;
    }

    private java.lang.String buildingname;

    /**
     * 
     */
    public java.lang.String getBuildingname()
    {
        return this.buildingname;
    }

    public void setBuildingname(java.lang.String buildingname)
    {
        this.buildingname = buildingname;
    }

    private java.lang.String pref;

    /**
     * 
     */
    public java.lang.String getPref()
    {
        return this.pref;
    }

    public void setPref(java.lang.String pref)
    {
        this.pref = pref;
    }

    private java.lang.String preferreddate;

    /**
     * 
     */
    public java.lang.String getPreferreddate()
    {
        return this.preferreddate;
    }

    public void setPreferreddate(java.lang.String preferreddate)
    {
        this.preferreddate = preferreddate;
    }

    private java.lang.String preferredtime;

    /**
     * 
     */
    public java.lang.String getPreferredtime()
    {
        return this.preferredtime;
    }

    public void setPreferredtime(java.lang.String preferredtime)
    {
        this.preferredtime = preferredtime;
    }

    private boolean hasgiftcard;

    /**
     * 
     */
    public boolean isHasgiftcard()
    {
        return this.hasgiftcard;
    }

    public void setHasgiftcard(boolean hasgiftcard)
    {
        this.hasgiftcard = hasgiftcard;
    }

    private java.util.Collection deliveryAddressChoises = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getDeliveryAddressChoises()
    {
        return this.deliveryAddressChoises;
    }

    public void setDeliveryAddressChoises(java.util.Collection deliveryAddressChoises)
    {
        this.deliveryAddressChoises = deliveryAddressChoises;
    }

    private net.malta.model.PublicUser publicUser;

    /**
     * 
     */
    public net.malta.model.PublicUser getPublicUser()
    {
        return this.publicUser;
    }

    public void setPublicUser(net.malta.model.PublicUser publicUser)
    {
        this.publicUser = publicUser;
    }

    private net.malta.model.GiftCard giftCard;

    /**
     * 
     */
    public net.malta.model.GiftCard getGiftCard()
    {
        return this.giftCard;
    }

    public void setGiftCard(net.malta.model.GiftCard giftCard)
    {
        this.giftCard = giftCard;
    }

    private net.malta.model.Prefecture prefecture;

    /**
     * 
     */
    public net.malta.model.Prefecture getPrefecture()
    {
        return this.prefecture;
    }

    public void setPrefecture(net.malta.model.Prefecture prefecture)
    {
        this.prefecture = prefecture;
    }

    /**
     * Returns <code>true</code> if the argument is an DeliveryAddress instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof DeliveryAddress))
        {
            return false;
        }
        final DeliveryAddress that = (DeliveryAddress)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link net.malta.model.DeliveryAddress}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link net.malta.model.DeliveryAddress}.
         */
        public static net.malta.model.DeliveryAddress newInstance()
        {
            return new net.malta.model.DeliveryAddressImpl();
        }

        /**
         * Constructs a new instance of {@link net.malta.model.DeliveryAddress}, taking all required and/or
         * read-only properties as arguments.
         */
        public static net.malta.model.DeliveryAddress newInstance(java.lang.String name, java.lang.String kana, int zipthree, int zipfour, java.lang.String phone, java.lang.String address, java.lang.String buildingname, java.lang.String pref, java.lang.String preferreddate, java.lang.String preferredtime, boolean hasgiftcard, net.malta.model.PublicUser publicUser)
        {
            final net.malta.model.DeliveryAddress entity = new net.malta.model.DeliveryAddressImpl();
            entity.setName(name);
            entity.setKana(kana);
            entity.setZipthree(zipthree);
            entity.setZipfour(zipfour);
            entity.setPhone(phone);
            entity.setAddress(address);
            entity.setBuildingname(buildingname);
            entity.setPref(pref);
            entity.setPreferreddate(preferreddate);
            entity.setPreferredtime(preferredtime);
            entity.setHasgiftcard(hasgiftcard);
            entity.setPublicUser(publicUser);
            return entity;
        }

        /**
         * Constructs a new instance of {@link net.malta.model.DeliveryAddress}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static net.malta.model.DeliveryAddress newInstance(java.lang.String name, java.lang.String kana, int zipthree, int zipfour, java.lang.String phone, java.lang.String address, java.lang.String buildingname, java.lang.String pref, java.lang.String preferreddate, java.lang.String preferredtime, boolean hasgiftcard, java.util.Collection deliveryAddressChoises, net.malta.model.PublicUser publicUser, net.malta.model.GiftCard giftCard, net.malta.model.Prefecture prefecture)
        {
            final net.malta.model.DeliveryAddress entity = new net.malta.model.DeliveryAddressImpl();
            entity.setName(name);
            entity.setKana(kana);
            entity.setZipthree(zipthree);
            entity.setZipfour(zipfour);
            entity.setPhone(phone);
            entity.setAddress(address);
            entity.setBuildingname(buildingname);
            entity.setPref(pref);
            entity.setPreferreddate(preferreddate);
            entity.setPreferredtime(preferredtime);
            entity.setHasgiftcard(hasgiftcard);
            entity.setDeliveryAddressChoises(deliveryAddressChoises);
            entity.setPublicUser(publicUser);
            entity.setGiftCard(giftCard);
            entity.setPrefecture(prefecture);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}