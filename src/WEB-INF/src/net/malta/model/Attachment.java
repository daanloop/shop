// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package net.malta.model;

/**
 * 
 */
public abstract class Attachment
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 5191454273252811312L;

    private java.lang.Integer id;

    /**
     * 
     */
    public java.lang.Integer getId()
    {
        return this.id;
    }

    public void setId(java.lang.Integer id)
    {
        this.id = id;
    }

    private java.lang.String filetype;

    /**
     * 
     */
    public java.lang.String getFiletype()
    {
        return this.filetype;
    }

    public void setFiletype(java.lang.String filetype)
    {
        this.filetype = filetype;
    }

    private float width;

    /**
     * 
     */
    public float getWidth()
    {
        return this.width;
    }

    public void setWidth(float width)
    {
        this.width = width;
    }

    private float height;

    /**
     * 
     */
    public float getHeight()
    {
        return this.height;
    }

    public void setHeight(float height)
    {
        this.height = height;
    }

    private boolean wide;

    /**
     * 
     */
    public boolean isWide()
    {
        return this.wide;
    }

    public void setWide(boolean wide)
    {
        this.wide = wide;
    }

    private net.malta.model.DbFile dbFile;

    /**
     * 
     */
    public net.malta.model.DbFile getDbFile()
    {
        return this.dbFile;
    }

    public void setDbFile(net.malta.model.DbFile dbFile)
    {
        this.dbFile = dbFile;
    }

    private net.malta.model.Item aszoom;

    /**
     * 
     */
    public net.malta.model.Item getAszoom()
    {
        return this.aszoom;
    }

    public void setAszoom(net.malta.model.Item aszoom)
    {
        this.aszoom = aszoom;
    }

    private net.malta.model.Item asdetailed;

    /**
     * 
     */
    public net.malta.model.Item getAsdetailed()
    {
        return this.asdetailed;
    }

    public void setAsdetailed(net.malta.model.Item asdetailed)
    {
        this.asdetailed = asdetailed;
    }

    private net.malta.model.Item asdefault;

    /**
     * 
     */
    public net.malta.model.Item getAsdefault()
    {
        return this.asdefault;
    }

    public void setAsdefault(net.malta.model.Item asdefault)
    {
        this.asdefault = asdefault;
    }

    /**
     * Returns <code>true</code> if the argument is an Attachment instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Attachment))
        {
            return false;
        }
        final Attachment that = (Attachment)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link net.malta.model.Attachment}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link net.malta.model.Attachment}.
         */
        public static net.malta.model.Attachment newInstance()
        {
            return new net.malta.model.AttachmentImpl();
        }

        /**
         * Constructs a new instance of {@link net.malta.model.Attachment}, taking all required and/or
         * read-only properties as arguments.
         */
        public static net.malta.model.Attachment newInstance(java.lang.String filetype, float width, float height, boolean wide)
        {
            final net.malta.model.Attachment entity = new net.malta.model.AttachmentImpl();
            entity.setFiletype(filetype);
            entity.setWidth(width);
            entity.setHeight(height);
            entity.setWide(wide);
            return entity;
        }

        /**
         * Constructs a new instance of {@link net.malta.model.Attachment}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static net.malta.model.Attachment newInstance(java.lang.String filetype, float width, float height, boolean wide, net.malta.model.DbFile dbFile, net.malta.model.Item aszoom, net.malta.model.Item asdetailed, net.malta.model.Item asdefault)
        {
            final net.malta.model.Attachment entity = new net.malta.model.AttachmentImpl();
            entity.setFiletype(filetype);
            entity.setWidth(width);
            entity.setHeight(height);
            entity.setWide(wide);
            entity.setDbFile(dbFile);
            entity.setAszoom(aszoom);
            entity.setAsdetailed(asdetailed);
            entity.setAsdefault(asdefault);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}